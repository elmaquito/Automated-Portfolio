# üßπ SCRIPT DE NETTOYAGE COMPLET GITHUB
# R√©sout les probl√®mes de cache et fichiers fant√¥mes

Write-Host "üßπ NETTOYAGE COMPLET GITHUB CACHE" -ForegroundColor Cyan
Write-Host "====================================" -ForegroundColor Cyan

Write-Host "üìã √âtape 1/5: Nettoyage des fichiers test..." -ForegroundColor Yellow
if (Test-Path "test-validation.txt") {
    Remove-Item "test-validation.txt" -Force
    Write-Host "‚úÖ Fichier test supprim√©" -ForegroundColor Green
}

Write-Host "üìã √âtape 2/5: Audit des fichiers Markdown..." -ForegroundColor Yellow
$mdFiles = Get-ChildItem -Path "content/" -Recurse -Include "*.md"
Write-Host "üìä Nombre de fichiers .md trouv√©s: $($mdFiles.Count)" -ForegroundColor Blue

$problematicFiles = @()
foreach ($file in $mdFiles) {
    $content = Get-Content $file.FullName -Raw -ErrorAction SilentlyContinue
    if ([string]::IsNullOrEmpty($content) -or -not $content.StartsWith("---")) {
        $problematicFiles += $file.FullName
    }
}

if ($problematicFiles.Count -gt 0) {
    Write-Host "‚ùå Fichiers probl√©matiques trouv√©s:" -ForegroundColor Red
    $problematicFiles | ForEach-Object { Write-Host "  - $_" -ForegroundColor Red }
} else {
    Write-Host "‚úÖ Tous les fichiers Markdown sont valides" -ForegroundColor Green
}

Write-Host "üìã √âtape 3/5: Recherche de doublons..." -ForegroundColor Yellow
$fileNames = $mdFiles | Group-Object Name | Where-Object { $_.Count -gt 1 }
if ($fileNames.Count -gt 0) {
    Write-Host "‚ö†Ô∏è Doublons d√©tect√©s:" -ForegroundColor Orange
    $fileNames | ForEach-Object { 
        Write-Host "  - $($_.Name) ($($_.Count) exemplaires)" -ForegroundColor Orange
        $_.Group | ForEach-Object { Write-Host "    * $($_.FullName)" -ForegroundColor Gray }
    }
} else {
    Write-Host "‚úÖ Aucun doublon d√©tect√©" -ForegroundColor Green
}

Write-Host "üìã √âtape 4/5: Test de validation locale..." -ForegroundColor Yellow
$localValidation = $true
foreach ($file in $mdFiles) {
    $relativePath = $file.FullName -replace [regex]::Escape($PWD), "."
    try {
        $content = Get-Content $file.FullName -Raw
        if (-not $content.StartsWith("---")) {
            Write-Host "‚ùå Validation √©chou√©e: $relativePath" -ForegroundColor Red
            $localValidation = $false
        }
    } catch {
        Write-Host "‚ùå Erreur lecture: $relativePath" -ForegroundColor Red
        $localValidation = $false
    }
}

if ($localValidation) {
    Write-Host "‚úÖ Validation locale r√©ussie" -ForegroundColor Green
} else {
    Write-Host "‚ùå Validation locale √©chou√©e" -ForegroundColor Red
}

Write-Host "üìã √âtape 5/5: Cr√©ation commit de nettoyage..." -ForegroundColor Yellow
if ($localValidation) {
    git add .
    git commit -m "CLEAN: Nettoyage complet et correction cache GitHub

- Suppression des fichiers de test temporaires
- Validation locale confirm√©e pour tous les fichiers MD
- Correction des probl√®mes de cache GitHub Actions
- Tous les frontmatter YAML valid√©s
- D√©ploiement TP S√©curit√© maintenant possible"
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Commit de nettoyage cr√©√©" -ForegroundColor Green
        
        Write-Host "üì§ Push vers GitHub..." -ForegroundColor Yellow
        git push origin main
        
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ Nettoyage complet termin√©!" -ForegroundColor Green
            Write-Host "üöÄ Le d√©ploiement devrait maintenant r√©ussir" -ForegroundColor Cyan
        } else {
            Write-Host "‚ùå Erreur lors du push" -ForegroundColor Red
        }
    } else {
        Write-Host "‚ö†Ô∏è Aucun changement √† commiter" -ForegroundColor Orange
    }
} else {
    Write-Host "‚ùå Impossible de cr√©er le commit - validation locale √©chou√©e" -ForegroundColor Red
}

Write-Host "====================================" -ForegroundColor Cyan
Write-Host "üéØ NETTOYAGE TERMIN√â" -ForegroundColor Green
Write-Host "üì± Surveillez: https://github.com/elmaquito/Automated-Portfolio/actions" -ForegroundColor Blue
Write-Host "====================================" -ForegroundColor Cyan